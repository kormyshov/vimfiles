snippet pb
	push_back(${1})${2}
snippet mp
	make_pair(${1}, ${2})${3}
snippet sz
	size()${1}

snippet vi
	vector<int> ${1:v}
snippet vvi
	vector<int> ${1:g}[${2}]${3}
snippet pii
	pair<int, int> ${1:p}

snippet # include
	#include <${1}>${2}
snippet # define
	#define ${1}
snippet #i
	#include <${1}>${2}
snippet #d
	#define #{1}

snippet fill
	memset(${1:m}, ${2:0}, sizeof($1));${3}

snippet if
	if(${1:/* ... */}) ${2:// code...}
snippet If
	if(${1:/* ... */})
	{
		${2:// code...}
	}
	${3}
snippet ife
	if(${1:/* ... */}) ${2:// code...}
	else ${3:// code...}
snippet Ife
	if(${1:/* ... */})
	{
		${2:// code...}
	}
	else
	{
		${3:// code...}
	}
	${4}

snippet wh
	while(${1:/* ... */}) ${2:// code...}
snippet Wh
	while(${1:/* ... */})
	{
		${2:// code...}
	}
	${3}

snippet for
	for(${1:i}=0; $1<${2:N}; ++$1) ${3:// code...}
snippet For
	for(${1:i}=0; $1<${2:N}; ++$1)
	{
		${3:// code...}
	}
	${4}
snippet forab
	for(${1:i}=${2:1}; $1<=${3:N}; ++$1) ${4:// code...}
snippet Forab
	for(${1:i}=${2:1}; $1<=${3:N}; ++$1)
	{
		${4:// code...}
	}
	${5}

snippet forr
	for(${1:i}=${2:N}-1; $1>=0; --$1) ${3:// code...}
snippet Forr
	for(${1:i}=${2:N}-1; $1>=0; --$1)
	{
		${3:// code...}
	}
	${4}
snippet forrab
	for(${1:i}=${2:N}; $1>=${3:1}; --$1) ${4:// code...}
snippet Forrab
	for(${1:i}=${2:N}; $1>=${3:1}; --$1)
	{
		${4:// code...}
	}
	${5}

snippet forv
	for(${1:i}=0; $1<${2:v}.size(); ++$1) ${3:// code...}
snippet Forv
	for(${1:i}=0; $1<${2:v}.size(); ++$1)
	{
		${3:// code...}
	}
	${4}
snippet forrv
	for(${1:i}=${2:v}.size()-1; $1>=0; --$1) ${3:// code...}
snippet Forrv
	for(${1:i}=${2:v}.size()-1; $1>=0; --$1)
	{
		${3:// code...}
	}
	${4}



