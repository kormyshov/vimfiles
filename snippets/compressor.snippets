snippet compressor
	struct compressor {
		vector<int> v;
	};
	
	void init(vector<int> _a, compressor &_r)
	{
		_r.v.clear();
		sort(_a.begin(), _a.end());
		_r.v.push_back(-INF);
		_r.v.push_back(_a[0]);
		for(int _i=1; _i<(int)_a.size(); ++_i)
			if(_a[_i]!=_a[_i-1])
				_r.v.push_back(_a[_i]);
		_r.v.push_back(INF);
	}
	
	int size(compressor &_r)
	{
		return _r.v.size();
	}
	
	int get(compressor &_c, int a)
	{
		return lower_bound(_c.v.begin(), _c.v.end(), a) - _c.v.begin();
	}
	
